Example from http://doc.opalang.org/api/stdlib.web.template.template.opa.html#value_stdlib.web.template that throws the following error:

Error
File "main.opa", line 32, characters 9-54, (32:9-32:54 | 1379-1424)
Function was found of type
Template.engine('a, 'b), Template.engine('b, 'a) -> Template.engine('a, 'b)
but application expects it to be of type
Template.engine(void, 'c),
{ cachable: Template.content(either('d, 'e)) -> bool;
  export:
  Template.content(either({ response }, 'f)), 'g ->
  { success: xhtml } / { failure: { unknown_tag: string } / 'c.b } / 'c.a;
  parse:
  'h,
  { xmlns:
    { args: list(Xml.attribute);
      content: list(xml(xmlns_specific_attributes, xmlns_dialect));
      namespace: string;
      specific_attributes: option(xmlns_specific_attributes); tag: string } /
    { content_unsafe: string } /
    { fragment: list(xml(xmlns_specific_attributes, xmlns_dialect)) } /
    { text: string } / { xml_dialect: option(xmlns_dialect) };
    xmlns_parse: 'i }
  -> outcome(Template.content(either(MyEngine.tag, 'j)), Template.failure);
  source:
  Template.content(either('d, 'e)),
  (Template.content(either('d, 'e)) -> outcome
   (string, Template.export_failure)),
  stringmap(string), (int -> Template.printer), int -> outcome
  (string, Template.export_failure) }
-> 'k.
Types
{ xmlns:
  { args: list(Xml.attribute);
    content: list(xml(xmlns_specific_attributes, xmlns_dialect));
    namespace: string;
    specific_attributes: option(xmlns_specific_attributes); tag: string } /
  { content_unsafe: string } /
  { fragment: list(xml(xmlns_specific_attributes, xmlns_dialect)) } /
  { text: string } / { xml_dialect: option(xmlns_dialect) };
  xmlns_parse: 'i }
and
{ xmlns: xmlns;
  xmlns_parser:
  xmlns -> outcome(Template.content(either('b, 'a)), Template.failure) }
are not compatible
Hint:
  Field(s) xmlns_parse only appear(s) in the first type.

Hint:
  Field(s) xmlns_parser only appear(s) in the second type.

Hint:
  Error occurred through field parse.

